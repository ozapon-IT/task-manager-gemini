services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: taskmanager
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d taskmanager"]
      interval: 10s
      retries: 5
      start_period: 15s

  backend:
    build:
      context: ./backend
      dockerfile: ../docker/backend/Dockerfile
    expose:
      - "8080"
    depends_on:
      db:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/taskmanager
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_FLYWAY_ENABLED: true
    mem_limit: 1g

  frontend:
    build:
      context: ./frontend
      dockerfile: ../docker/frontend/Dockerfile
    depends_on:
      - backend
    command: ["pnpm", "build"]
    volumes:
      - ./frontend:/app
    # ビルド成果物は nginx にマウントされる
    environment:
      NUXT_PUBLIC_API_BASE: "/api"

  nginx:
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    ports:
      - "80:80"
    depends_on:
      - backend
      - frontend
    volumes:
      - ./frontend/.output/public:/usr/share/nginx/html:ro
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro

volumes:
  postgres_data:
